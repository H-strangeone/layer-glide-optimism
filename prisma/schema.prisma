generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ContractDeployment {
  id              String   @id @default(cuid())
  address         String   @unique
  network         String   // "sepolia" or "localhost"
  deployedAt      DateTime @default(now())
  isActive        Boolean  @default(true)
  balances        Layer2Balance[]
}

model Layer2Balance {
  id                  String   @id @default(cuid())
  userAddress         String
  balance            String   @default("0")
  contractDeployment ContractDeployment @relation(fields: [contractAddress], references: [address])
  contractAddress    String
  updatedAt          DateTime @updatedAt
  createdAt          DateTime @default(now())

  @@unique([userAddress, contractAddress])
}

model Transaction {
  id              String   @id @default(cuid())
  hash            String   @unique
  from            String
  to              String
  amount          String
  timestamp       DateTime @default(now())
  status          String   // "pending", "completed", "failed"
  type            String   // "deposit", "withdraw", "transfer"
  layer           String   // "layer1", "layer2"
  batchId         Int?
  merkleProof     String?
  contractAddress String?  // Track which contract instance this transaction belongs to
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Balance {
  id        String   @id @default(cuid())
  address   String   @unique
  layer1    String   @default("0")
  layer2    String   @default("0")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Batch {
  id              String   @id @default(cuid())
  batchId         Int      @unique
  transactionsRoot String
  timestamp       DateTime @default(now())
  status          String   // "pending", "verified", "finalized"
  contractAddress String?  // Track which contract instance this batch belongs to
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
} 